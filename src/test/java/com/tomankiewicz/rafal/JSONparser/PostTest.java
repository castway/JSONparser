package com.tomankiewicz.rafal.JSONparser;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;

/* Equals and hashCode are used for unit testing. Both methods have been generated by IDE,
*  so they should be tested.
*/

class PostTest {

	private static Post post1;
	private static Post post2;
	private static Post postSameAs1;
	private static Post postSameAs2;
	
	@BeforeAll
	static void createJsonString() {
		
		post1 = new Post();
		post2 = new Post();
		postSameAs1 = new Post();
		postSameAs2 = new Post();
		
		post1.setUserId(1);
		post1.setId(10);
		post1.setTitle("Title1");
		post1.setBody("Body1");

		post2.setUserId(2);
		post2.setId(20);
		post2.setTitle("Title2");
		post2.setBody("Body2");
		
		postSameAs1.setUserId(1);
		postSameAs1.setId(10);
		postSameAs1.setTitle("Title1");
		postSameAs1.setBody("Body1");
	
		postSameAs2.setUserId(2);
		postSameAs2.setId(20);
		postSameAs2.setTitle("Title2");
		postSameAs2.setBody("Body2");

	}
	
	@Test
	void hashCodeMethodReturnsDifferentHashCodesForDifferentObjects() {

		assertNotEquals(post1.hashCode(), post2.hashCode());
	}
	
	@Test
	void hashCodeMethodShouldReturnSameHashCodesForSameObjects() {
		
		assertEquals(post1.hashCode(), postSameAs1.hashCode());
		assertEquals(post2.hashCode(), postSameAs2.hashCode());
	}
	
	@Test
	void equalsMethodShouldReturnFalseForDifferentObjects() {
		
		assertFalse(post1.equals(post2));
		assertFalse(post2.equals(post1));
		assertFalse(postSameAs1.equals(postSameAs2));
		assertFalse(postSameAs2.equals(postSameAs1));
	}
	
	@Test
	void equalsMethodReturnsTrueForSameObjects() {
		
		assertTrue(post1.equals(postSameAs1));
		assertTrue(post2.equals(postSameAs2));
		
	}

}
